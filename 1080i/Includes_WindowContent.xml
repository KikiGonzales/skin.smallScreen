<?xml version="1.0" encoding="UTF-8"?>
<!-- Foundation -->
<includes>

    <include name="GlobalOverlay">
        <control type="image">
	        <include>Dimensions_Fullscreen</include>
	        <texture>common/white.png</texture>
	        <colordiffuse>PanelBG</colordiffuse>
	        <animation effect="fade" end="75" condition="true">Conditional</animation>
	        <include>Animation.FadeIn</include>
	    </control>
	</include>
	
	<include name="GlobalVignette">
		<control type="image">
			<width>1920</width>
			<height>448</height>
			<texture colordiffuse="7F000000">common/gradient.png</texture>
		</control>
		
	</include>
	
	<variable name="GlobalFanart-Movies">
        <value condition="!IsEmpty(Skin.String(home.fanart)) + [!Skin.HasSetting(home.useweatherfanart) | IsEmpty(Skin.String(weather.fanart))]">$INFO[Skin.String(home.fanart)]</value>
        <value condition="!IsEmpty(Skin.String(weather.fanart)) + Skin.HasSetting(home.useweatherfanart)">$INFO[Skin.String(weather.fanart)]$INFO[Weather.fanartcode]/</value>
        <value condition="IntegerGreaterThan(System.Time(ss),48)">$INFO[Window(home).Property(RandomMovie.5.Art(fanart))]</value>
        <value condition="IntegerGreaterThan(System.Time(ss),36)">$INFO[Window(home).Property(RandomMovie.9.Art(fanart))]</value>
        <value condition="IntegerGreaterThan(System.Time(ss),24)">$INFO[Window(home).Property(RandomMovie.8.Art(fanart))]</value>
        <value condition="IntegerGreaterThan(System.Time(ss),12)">$INFO[Window(home).Property(RandomMovie.7.Art(fanart))]</value>
        <value>$INFO[Window(home).Property(RandomMovie.6.Art(fanart))]</value>
    </variable>

    <variable name="GlobalFanart">
        <value condition="Skin.HasSetting(disable.fanart) + !Window.IsVisible(home)">-</value>
        <value condition="Window.IsVisible(weather)">$INFO[Skin.String(weather.fanart)]$INFO[Window(Weather).Property(Current.FanartCode)]/</value>
        <!--<value condition="Control.HasFocus(9500) + !IsEmpty(Container(9500).ListItem.Thumb)">$INFO[Container(9500).ListItem.Thumb]</value>
        <value condition="[Control.HasFocus(9502) | Control.HasFocus(9501)] + !IsEmpty(Container(9501).ListItem.Thumb)">$INFO[Container(9501).ListItem.Thumb]</value>-->
        <value condition="![Control.HasFocus(9500) | Control.HasFocus(9502) | Control.HasFocus(9501)] + !IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value condition="![Control.HasFocus(9500) | Control.HasFocus(9502) | Control.HasFocus(9501)] + !IsEmpty(ListItem.Property(Fanart_Image))">$INFO[ListItem.Property(Fanart_Image)]</value>
        <value condition="Window.IsVisible(home) + Control.IsVisible(9600) + !Skin.HasSetting(home.usewidgetbg) + !IsEmpty(Container(9600).ListItem.Art(fanart))">$INFO[Container(9600).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(home) + Control.IsVisible(9600) + !Skin.HasSetting(home.usewidgetbg)">$INFO[Container(9600).ListItem.Icon]</value>
        <value condition="Window.IsVisible(home)">$VAR[GlobalFanart-Movies]</value>
        <value>-</value>
    </variable>
    
	<include name="GlobalBackground">
		<control type="group">
		    <control type="image">
		        <include>Dimensions_Fullscreen</include>
		        <texture colordiffuse="Background">common/white.png</texture>
		    </control>
			<control type="multiimage">
				<include>Dimensions_Fullscreen</include>
				<include>Animation.FadeIn</include>
				<include>Animation.FadeOut</include>
				<fadetime>600</fadetime>
				<timeperimage>12000</timeperimage>
				<randomize>true</randomize>
				<imagepath background="true">$VAR[GlobalFanart]</imagepath>
				<visible>!Player.HasVideo | [Skin.HasSetting(disable.bgvideo) + !Window.IsVisible(home)]</visible>
                <animation effect="zoom" start="110" end="130" center="auto" time="10000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(Fanart.Animate)">Conditional</animation>
                <animation effect="slide" start="-30,-30" end="30,30" time="6000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(Fanart.Animate)">Conditional</animation>
                <visible>Window.IsVisible(home)</visible>
			</control>
			<control type="multiimage">
				<include>Dimensions_Fullscreen</include>
				<include>Animation.FadeIn</include>
				<include>Animation.FadeOut</include>
				<fadetime>600</fadetime>
				<timeperimage>12000</timeperimage>
				<randomize>true</randomize>
				<imagepath background="true">$VAR[GlobalFanart]</imagepath>
                <animation effect="zoom" start="110" end="130" center="auto" time="10000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(Fanart.Animate)">Conditional</animation>
                <animation effect="slide" start="-30,-30" end="30,30" time="6000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(Fanart.Animate)">Conditional</animation>
                <colordiffuse>ff444444</colordiffuse>
                <visible>!Player.HasVideo | Skin.HasSetting(disable.bgvideo)</visible>
                <visible>!Window.IsVisible(home)</visible>
			</control>
			
			<control type="wraplist" id="9600">
			    <visible>stringcompare(Skin.String(home.widget),ContentRecommendedMoviesWidget)</visible>
			    <include>Def9600List</include>
			    <include>ContentRecommendedMoviesWidget</include>
            </control>
            <control type="wraplist" id="9600">
			    <visible>stringcompare(Skin.String(home.widget),ContentRecentMoviesWidget)</visible>
			    <include>Def9600List</include>
			    <include>ContentRecentMoviesWidget</include>
            </control>
            <control type="wraplist" id="9600">
			    <visible>stringcompare(Skin.String(home.widget),ContentRandomMoviesWidget)</visible>
			    <include>Def9600List</include>
			    <include>ContentRandomMoviesWidget</include>
            </control>
            <control type="wraplist" id="9600">
			    <visible>stringcompare(Skin.String(home.widget),ContentRandomEpisodesWidget)</visible>
			    <include>Def9600List</include>
			    <include>ContentRandomEpisodesWidget</include>
            </control>
            <control type="wraplist" id="9600">
			    <visible>stringcompare(Skin.String(home.widget),ContentRecommendedEpisodesWidget)</visible>
			    <include>Def9600List</include>
			    <include>ContentRecommendedEpisodesWidget</include>
            </control>
            <control type="wraplist" id="9600">
			    <visible>stringcompare(Skin.String(home.widget),ContentRecentEpisodesWidget)</visible>
			    <include>Def9600List</include>
			    <include>ContentRecentEpisodesWidget</include>
            </control>
            
            <control type="wraplist" id="9600">
			    <visible>stringcompare(Skin.String(home.widget),ContentMixedWidget) | IsEmpty(Skin.String(home.widget))</visible>
			    <include>Def9600List</include>
			    <include>ContentMixedWidget</include>
            </control>

            
			
			<control type="videowindow">
				<include>Dimensions_Fullscreen</include>
				<visible>Player.HasVideo + [!Skin.HasSetting(disable.bgvideo) | Window.IsVisible(home)]</visible>
				<include condition="!Window.Previous(VideoFullScreen.xml)">Animation.FadeIn</include>
				<include>Animation.FadeOut</include>
			</control>
			<control type="image">
		        <include>Dimensions_Fullscreen</include>
		        <texture colordiffuse="Background">common/white.png</texture>
                <animation effect="fade" start="100" end="75" condition="![Player.HasVideo + [!Skin.HasSetting(disable.bgvideo) | Window.IsVisible(home)]] + !Skin.HasSetting(fanart.showmore)">Conditional</animation>
                <animation effect="fade" start="100" end="50" condition="![Player.HasVideo + [!Skin.HasSetting(disable.bgvideo) | Window.IsVisible(home)]] + Skin.HasSetting(fanart.showmore)">Conditional</animation>
                <animation effect="fade" start="100" end="92" condition="[Player.HasVideo + [!Skin.HasSetting(disable.bgvideo) | Window.IsVisible(home)]]">Conditional</animation>
                <visible>!Window.IsVisible(home)</visible>
		    </control>
			<control type="group">		
			    <visible>Window.IsVisible(home)</visible>
			    <visible>!Control.HasFocus(9600)</visible>
			    <animation effect="slide" end="0" start="0,-200" time="200" condition="!Control.HasFocus(9600)" reversible="false">Conditional</animation>
                <include>GlobalVignette</include>
                <include>Animation.FadeIn</include>
				<include>Animation.FadeOut</include>
            </control>
            <control type="image">
                <posy>384r</posy>
                <width>1920</width>
                <height>384</height>
                <texture colordiffuse="7F000000" flipy="true">common/gradient.png</texture>
                <visible>Control.HasFocus(9600)</visible>
                <include>Animation.FadeOut</include>
            </control>
            <control type="group">
                <posy>400</posy>
                <visible>Skin.HasSetting(home.showinfoonwidget)</visible>
                <visible>!Skin.HasSetting(home.usewidgetbg)</visible>
                <visible>Window.IsVisible(home)</visible>
                <visible>!Player.HasVideo</visible>
                <visible>!Skin.HasSetting(home.talltiles)</visible>
                <visible>!IsEmpty(Container(9600).ListItem.Label)</visible>
                <animation effect="slide" start="0" end="0,320" time="500" tween="back" reversible="true" easing="out" condition="Control.HasFocus(9600)">Conditional</animation>
                
                <include>Animation.SlideOpen.Right</include>
                <include>Animation.FadeOut</include>
                <control type="image">
                    <posx>-100</posx>
                    <width>900</width>
                    <height>340</height>	
                    <texture align="left" border="150">home/half-tile.png</texture>
                    <colordiffuse>TopBarDark</colordiffuse>
                    <animation effect="fade" start="100" end="95" condition="true">Conditional</animation>
                </control>
                <control type="grouplist">
                    
                    <posx>64</posx>
                    <posy>20</posy>
                    <width>650</width>
                    <orientation>vertical</orientation>
                    <control type="label">
                        <label>$VAR[HomeWidgetType2]</label>
                        <aligny>top</aligny>
                        <height>35</height>
                    </control>
                    <control type="label">
                        <label>$INFO[Container(9600).ListItem.Label]</label>
                        <aligny>top</aligny>
                        <font>Font-WidgetInfoTitle</font>
                        <height>70</height>
                        <textcolor>Highlight</textcolor>
                    </control>
                    <control type="textbox">
                        <label>$INFO[Container(9600).ListItem.Property(Plot)]</label>
                        <aligny>top</aligny>
                        <height>120</height>
                        <font>Font-ListInfo</font>
                        <visible>!IsEmpty(Container(9600).ListItem.Property(Plot))</visible>
                    </control>
                    <control type="textbox">
                        <label>$INFO[Container(9600).ListItem.Plot]</label>
                        <aligny>top</aligny>
                        <height>120</height>
                        <font>Font-ListInfo</font>
                        <visible>IsEmpty(Container(9600).ListItem.Property(Plot))</visible>
                    </control>
                    <control type="label">
                        <label>$INFO[Container(9600).ListItem.Label2]</label>
                        <aligny>center</aligny>
                        <font>Font-ListInfo-Small</font>
                        <height>65</height>
                        <visible>!IsEmpty(Container(9600).ListItem.Label2)</visible>
                    </control>
                    <control type="label">
                        <label>$INFO[Container(9600).ListItem.TvShowTitle,,  •  ]$INFO[Container(9600).ListItem.Year,,  •  ]$INFO[Container(9600).ListItem.Rating]</label>
                        <aligny>center</aligny>
                        <font>Font-ListInfo-Small</font>
                        <height>65</height>
                        <visible>IsEmpty(Container(9600).ListItem.Label2)</visible>
                    </control>
                </control>
            </control>
            <control type="group">
                <left>30</left>
                <posy>172r</posy>
                <visible>Control.HasFocus(9600)</visible>
                <include>Animation.FadeIn</include>
                <include>Animation.FadeOut</include>
                <visible>!Skin.HasSetting(home.showinfoonwidget) | Skin.HasSetting(home.talltiles)</visible>
                
                <control type="label">
                    <top>25</top>
                    <width>1860</width>
                    <height>100</height>
                    <font>Font-Header</font>
                    <label>$INFO[Container(9600).ListItem.Label]</label>
                    <aligny>top</aligny>
                    <textcolor>$VAR[TopBarMainLabel]</textcolor>
                </control>
                <control type="grouplist">
                    <posy>115</posy>
                    <orientation>horizontal</orientation>
                    <itemgap>16</itemgap>
                    <width>1860</width>
                    <control type="label">
                        <width>auto</width>
                        <font>Font-Sublabel</font>
                        <aligny>top</aligny>
                        <textcolor>Highlight</textcolor>
                        <scroll>true</scroll>
                        <label>$INFO[Container(9600).ListItem.Label2]</label>
                    </control>
                    <control type="label">
                        <width>1800</width>
                        <font>Font-Sublabel</font>
                        <aligny>top</aligny>
                        <textcolor>$VAR[TopBarSubLabel]</textcolor>
                        <scroll>true</scroll>
                        <label>$INFO[Container(9600).ListItem.Property(Plot)]</label>
                    </control>
                </control>
            </control>
		</control>	
	</include>
	
</includes>